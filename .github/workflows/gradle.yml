# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish package to Github Packages with Gradle
on:
  push:
    branches: [ "main" ]
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Publish with Gradle
      uses: gradle/gradle-build-action@v2 # v2.6.0
      with:
        arguments: publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Publish artifact
#      env:
#        GITHUB_TOKEN: ${{ secrets.JAVA_TOKEN }}
#
#      # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
#      # If we split on '/' and take the 3rd value,
#      # we can get the release name.
#      run: |
#        NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
#        echo "New version: ${NEW_VERSION}"
#        echo "Github username: ${GITHUB_ACTOR}"
#        ./gradlew -Pversion=${NEW_VERSION} publish

